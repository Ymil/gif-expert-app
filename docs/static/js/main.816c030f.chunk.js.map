{"version":3,"sources":["components/AddCategory.js","components/ShowGif.js","components/helpers/GetGifs.js","components/ShowCategory.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","categories","preventDefault","type","value","onChange","target","placeholder","ShowGif","id","title","url","state","setstate","className","src","onLoad","getGifs","category","a","limit","apiKey","encodeURI","fetch","rep","json","data","gifs","map","img","images","downsized_medium","ShowCategory","loading","setState","useEffect","then","useFetchGifs","gif","propType","PropTypes","string","isRequired","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GACfH,EAAWI,OAAOC,OAAS,IAC1BP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAC5CL,EAAc,KAIlBE,EAAEI,kBAIF,SACI,uBACAC,KAAK,OACLC,MAAOT,EACPU,SAnBmB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,QAmBnBG,YAAY,qC,wBCzBXC,EAAU,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEhC,EAA0BjB,oBAAS,GAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KAEA,OACI,sBAAKC,UAAU,wCAAf,WACOF,GAAS,mBAAGE,UAAU,qDAAb,yBACZ,qBAAKC,IAAKJ,EAAKK,OAAQ,kBAAMH,GAAS,MACtC,4BAA2B,GAAvBH,EAAMX,OAAOC,OAAc,aAAeU,Q,wBCV7CO,EAAO,uCAAG,WAAOC,GAAP,uCAAAC,EAAA,6DAAiBC,EAAjB,+BAAuB,EACpCC,EAAS,mCAETV,EAHa,qDAGuCS,EAHvC,cAGkDE,UAAUJ,GAH5D,oBAGiFG,GAHjF,SAIDE,MAAMZ,GAJL,cAIba,EAJa,gBAKEA,EAAIC,OALN,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KACd,SAAAC,GAAQ,IAAD,EACH,MAAO,CACHpB,GAAIoB,EAAIpB,GACRC,MAAOmB,EAAInB,MACXC,IAAG,UAAEkB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBpB,QAX3B,kBAeZgB,GAfY,4CAAH,sDCIPK,G,MAAe,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAC1B,ECDwB,SAACA,GACzB,MAA0BxB,mBACtB,CACIiC,KAAM,GACNM,SAAS,IAHjB,mBAAOrB,EAAP,KAAcsB,EAAd,KAoBA,OAbAC,qBACI,WACIlB,EAAQC,GAAUkB,MAAM,SAAAT,GAAI,OACxBO,EACI,CACIP,KAAMA,EACNM,SAAS,SAK3B,CAACf,IAEIN,EDpBiByB,CAAanB,GAA9BS,EAAP,EAAOA,KAAMM,EAAb,EAAaA,QAEb,OACI,qCACI,6BAAKf,IAGDe,GAAW,mBAAGnB,UAAU,mCAAb,yBAEf,qBAAKA,UAAU,YAAf,SACMa,EAAKC,KACH,SAACU,GAAD,OAAS,cAAC,EAAD,eAAaA,cAO1CN,EAAaO,SAAW,CACpBrB,SAAUsB,IAAUC,OAAOC,YEpB/B,IA4BeC,EA5BM,WACjB,MAAoCjD,mBAAS,CACzC,SAAU,SAAU,aADxB,mBAAOO,EAAP,KAAmBR,EAAnB,KASA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQQ,EAAW2B,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MClBjC0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.816c030f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handlerInputChange = (e) => {    \n        setInputValue(e.target.value);\n    }\n\n    const handlerSumit = (e) => {\n        if(inputValue.trim().length > 2){\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('')\n        }\n        \n        \n        e.preventDefault()\n    }\n\n    return (\n        <form onSubmit={ handlerSumit }>         \n            <input \n            type='text'\n            value={inputValue}\n            onChange={ handlerInputChange }\n            placeholder='Ingrese la categoria a buscar'\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React, { useState } from 'react'\n\nexport const ShowGif = ({id, title, url}) => {\n    \n    const [state, setstate] = useState(false);\n\n    return (\n        <div className='card animate__animated animate__pulse'>\n            { !state && <p className=\"animate__animated animate__flash animate__infinite\">Cargando...</p>}\n            <img src={url} onLoad={() => setstate(true)}/>\n            <p>{title.trim().length == 0 ? \"Sin titulo\" : title}</p>\n        </div>\n    )\n}\n","export const getGifs = async (category, limit=5) => {\n    const apiKey = 'EYtcZUyg6JXj41AGeDs8dKJPQ167PnEd'\n\n    const url = `https://api.giphy.com/v1/gifs/search?limit=${limit}&q=${encodeURI(category)}&api_key=${apiKey}`\n    const rep = await fetch(url);\n    const {data} = await rep.json();\n    const gifs = data.map(\n        img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        }\n    );\n    return gifs;\n}","import PropTypes from 'prop-types'\nimport { ShowGif } from './ShowGif'\nimport { useFetchGifs } from './hooks/useFetchGifs'\nimport \"animate.css\"\nexport const ShowCategory = ({category}) => {\n    const {gifs, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            <h2>{category}</h2>\n\n            {\n                loading && <p className=\"animate__animated animate__flash\">Cargando...</p>\n            }\n            <div className=\"card-grid\">\n                { gifs.map(\n                    (gif) => <ShowGif {...gif} />\n                )}\n            </div>\n        </>\n    )\n}\n\nShowCategory.propType = {\n    category: PropTypes.string.isRequired\n}\n\n\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/GetGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState(\n        {\n            gifs: [],\n            loading: true\n        }\n    )\n\n    useEffect(\n        () => {\n            getGifs(category).then( gifs => (\n                setState(                    \n                    {\n                        gifs: gifs,\n                        loading: false\n                    }\n                )\n            ));\n        }\n    , [category]);\n\n    return state;\n}\n","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { ShowCategory } from './components/ShowCategory';\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState([\n        'Futbol', 'Basket', 'Ciclismo'\n    ]) \n\n    const handlerAdd = () => {\n        //categories.push('Tenis')\n        setCategories(['Tenis',...categories]);\n    }\n\n    return (\n        <>\n            <h1>Gif Expert App</h1>\n            <AddCategory setCategories={setCategories} />\n            <hr />            \n            <ul>\n                {\n                    categories.map((category) => (\n                        <ShowCategory \n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ul>\n        </>\n    )\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}