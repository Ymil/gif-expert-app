{"version":3,"sources":["components/AddCategory.js","components/ShowGif.js","components/helpers/GetGifs.js","components/ShowCategory.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","categories","preventDefault","type","value","onChange","target","placeholder","ShowGif","title","url","state","setstate","className","src","onLoad","getGifs","category","a","limit","apiKey","encodeURI","fetch","rep","json","data","gifs","map","img","id","images","downsized_medium","ShowCategory","loading","setState","useEffect","then","useFetchGifs","gif","key","GifExpertApp","defaultCategories","ReactDOM","render","document","getElementById"],"mappings":"0MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GACfH,EAAWI,OAAOC,OAAS,IAC1BP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAC5CL,EAAc,KAIlBE,EAAEI,kBAIF,SACI,uBACAC,KAAK,OACLC,MAAOT,EACPU,SAnBmB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,QAmBnBG,YAAY,qC,OCxBXC,EAAU,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAE5B,EAA0BhB,oBAAS,GAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KAEA,OACI,sBAAKC,UAAU,wCAAf,WACOF,GAAS,mBAAGE,UAAU,qDAAb,yBACZ,qBAAKC,IAAKJ,EAAKK,OAAQ,kBAAMH,GAAS,MACtC,mBAAGC,UAAU,QAAb,SAA6C,GAAvBJ,EAAMV,OAAOC,OAAc,aAAeS,Q,uBCX/DO,EAAO,uCAAG,WAAOC,GAAP,uCAAAC,EAAA,6DAAiBC,EAAjB,+BAAuB,EACpCC,EAAS,mCAETV,EAHa,qDAGuCS,EAHvC,cAGkDE,UAAUJ,GAH5D,oBAGiFG,GAHjF,SAIDE,MAAMZ,GAJL,cAIba,EAJa,gBAKEA,EAAIC,OALN,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KACd,SAAAC,GAAQ,IAAD,EACH,MAAO,CACHC,GAAID,EAAIC,GACRpB,MAAOmB,EAAInB,MACXC,IAAG,UAAEkB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBrB,QAX3B,kBAeZgB,GAfY,4CAAH,sDCIPM,G,MAAe,SAAC,GAAgB,IAAff,EAAc,EAAdA,SAC1B,ECDwB,SAACA,GACzB,MAA0BvB,mBACtB,CACIgC,KAAM,GACNO,SAAS,IAHjB,mBAAOtB,EAAP,KAAcuB,EAAd,KAoBA,OAbAC,qBACI,WACInB,EAAQC,GAAUmB,MAAM,SAAAV,GAAI,OACxBQ,EACI,CACIR,KAAMA,EACNO,SAAS,SAK3B,CAAChB,IAEIN,EDpBiB0B,CAAapB,GAA9BS,EAAP,EAAOA,KAAMO,EAAb,EAAaA,QAEb,OACI,qCACI,6BAAKhB,IAGDgB,GAAW,mBAAGpB,UAAU,mCAAb,yBAEf,qBAAKA,UAAU,YAAf,SACMa,EAAKC,KACH,SAACW,GAAD,OAAS,wBAAC,EAAD,2BAAaA,GAAb,IAAkBC,IAAKD,EAAIT,gBEUzCW,EAtBM,SAAC,GAA8B,IAAD,IAA5BC,yBAA4B,MAAR,GAAQ,EAE/C,EAAoC/C,mBAAS+C,GAA7C,mBAAOxC,EAAP,KAAmBR,EAAnB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQQ,EAAW0B,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCZjCyB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2def1f5f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handlerInputChange = (e) => {    \n        setInputValue(e.target.value);\n    }\n\n    const handlerSumit = (e) => {\n        if(inputValue.trim().length > 2){\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('')\n        }\n        \n        \n        e.preventDefault()\n    }\n\n    return (\n        <form onSubmit={ handlerSumit }>         \n            <input \n            type='text'\n            value={inputValue}\n            onChange={ handlerInputChange }\n            placeholder='Ingrese la categoria a buscar'\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const ShowGif = ({title, url}) => {\n    \n    const [state, setstate] = useState(false);\n\n    return (\n        <div className='card animate__animated animate__pulse'>\n            { !state && <p className=\"animate__animated animate__flash animate__infinite\">Cargando...</p>}\n            <img src={url} onLoad={() => setstate(true)}/>\n            <p className='title'>{title.trim().length == 0 ? \"Sin titulo\" : title}</p>\n        </div>\n    )\n}\n\nShowGif.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}","export const getGifs = async (category, limit=5) => {\n    const apiKey = 'EYtcZUyg6JXj41AGeDs8dKJPQ167PnEd'\n\n    const url = `https://api.giphy.com/v1/gifs/search?limit=${limit}&q=${encodeURI(category)}&api_key=${apiKey}`\n    const rep = await fetch(url);\n    const {data} = await rep.json();\n    const gifs = data.map(\n        img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        }\n    );\n    return gifs;\n}","import PropTypes from 'prop-types'\nimport { ShowGif } from './ShowGif'\nimport { useFetchGifs } from './hooks/useFetchGifs'\nimport \"animate.css\"\nexport const ShowCategory = ({category}) => {\n    const {gifs, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            <h2>{category}</h2>\n\n            {\n                loading && <p className=\"animate__animated animate__flash\">Cargando...</p>\n            }\n            <div className=\"card-grid\">\n                { gifs.map(\n                    (gif) => <ShowGif {...gif} key={gif.id} />\n                )}\n            </div>\n        </>\n    )\n}\n\nShowCategory.propTypes = {\n    category: PropTypes.string.isRequired\n}\n\n\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/GetGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState(\n        {\n            gifs: [],\n            loading: true\n        }\n    )\n\n    useEffect(\n        () => {\n            getGifs(category).then( gifs => (\n                setState(                    \n                    {\n                        gifs: gifs,\n                        loading: false\n                    }\n                )\n            ));\n        }\n    , [category]);\n\n    return state;\n}\n","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { ShowCategory } from './components/ShowCategory';\n\nconst GifExpertApp = ({defaultCategories = []}) => {\n    \n    const [categories, setCategories] = useState(defaultCategories)\n\n    return (\n        <>\n            <h1>Gif Expert App</h1>\n            <AddCategory setCategories={setCategories} />\n            <hr />            \n            <ul>\n                {\n                    categories.map((category) => (\n                        <ShowCategory \n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ul>\n        </>\n    )\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}